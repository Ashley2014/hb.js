{"version":3,"sources":["hb.drag.js"],"names":[],"mappings":"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","file":"hb.drag-compiled.js","sourcesContent":[";(function(){\r\n    \"use strict\";\r\n\r\n    function drag(dom,options){\r\n        var options=options||{};\r\n        var defaults={\r\n            maxScale:3,\r\n            minScale:0.5,\r\n            position:{\r\n                left:0,\r\n                top:0,\r\n                scale:1\r\n            },\r\n            onPinchMove:function(){\r\n                //console.log('f')\r\n            },\r\n            onPinchEnd:function(){\r\n                //console.log('f')\r\n            },\r\n            onPanMove:function(){\r\n                //console.log('f')\r\n            },\r\n            onPanEnd:function(){\r\n                //console.log('f')\r\n            },\r\n        };\r\n        this.settings = $.extend( {}, defaults, options );\r\n\r\n        if(typeof dom=='string'){\r\n            this.element=document.querySelector(dom);\r\n        }else{\r\n            this.element=dom;\r\n        }\r\n        this.$element=$(this.element);\r\n        this.init();\r\n        //console.log($el,el);\r\n    }\r\n\r\n\r\n    drag.prototype.init=function(){\r\n        var _this=this;\r\n        this.hammertime = new Hammer(this.element, {});\r\n        this.hammertime.get('pinch').set({ enable: true });\r\n        this.hammertime.get('pan').set({ direction: Hammer.DIRECTION_ALL });\r\n\r\n        var element = this.element;\r\n        var $element = this.$element;\r\n        var $elementParent = this.$element.parent();\r\n\r\n        var objWidth = $element.outerWidth();\r\n        var objHeight = $element.outerHeight();\r\n        var objParentWidth = $elementParent.innerWidth();\r\n        var objParentHeight = $elementParent.innerHeight();\r\n        var objParentBorderLeftWidth = Number($elementParent.css(\"border-left-width\").replace(/px|rem|%|em/,''));\r\n        var objParentBorderTopWidth = Number($elementParent.css(\"border-top-width\").replace(/px|rem|%|em/,''));\r\n        var objParentBorderOffsetLeft = $elementParent.offset().left;\r\n        var objParentBorderOffsetTop = $elementParent.offset().top;\r\n\r\n        var elementParentRect =$elementParent.get()[0].getBoundingClientRect();\r\n\r\n        var leftGap=objParentBorderLeftWidth+elementParentRect.left;\r\n        var topGap=objParentBorderTopWidth+elementParentRect.top;\r\n\r\n\r\n        //console.log(leftGap,topGap);\r\n\r\n        if(objParentWidth/objWidth>objParentHeight/objHeight){\r\n            this.settings.minScale=objParentWidth/objWidth;\r\n        }else{\r\n            this.settings.minScale=objParentHeight/objHeight;\r\n        }\r\n\r\n\r\n        var position=this.settings.position;\r\n\r\n\r\n        var lNow=position.left;\r\n        var tNow=position.top;\r\n\r\n        var scaleNow=position.scale;\r\n        var scaleLast=0;\r\n        var center={\r\n            x:objWidth/2,\r\n            y:objHeight/2,\r\n        };\r\n        this.settings.center=center;\r\n\r\n\r\n        this.settings.constant={\r\n            leftGap:leftGap,\r\n            topGap:topGap,\r\n        };\r\n\r\n\r\n\r\n        $element.css({\r\n            transform: `translate3d(${lNow}px,${tNow}px,0)`,\r\n        });\r\n\r\n        //this.hammertime.on('swipe', function(ev) {\r\n        //    console.log('swipe',ev);\r\n        //});\r\n\r\n        this.hammertime.on('panmove', function(ev) {\r\n            //console.log('pan',ev);\r\n            //console.log('pan',lNow,tNow);\r\n\r\n            //console.log(ev.deltaX,ev.deltaY,ev.velocityX,ev.velocityY,ev.distance);\r\n\r\n            lNow=ev.deltaX+position.left;\r\n            tNow=ev.deltaY+position.top;\r\n\r\n\r\n\r\n            //lNow=(ev.deltaX+position.left)*scaleNow;\r\n            //tNow=(ev.deltaY+position.top)*scaleNow;\r\n\r\n\r\n            //if( lNow<(objParentWidth-objWidth+(objWidth-objWidth*scaleNow-(center.x-center.x*scaleNow))) ){\r\n            //    lNow=objParentWidth-objWidth+(objWidth-objWidth*scaleNow-(center.x-center.x*scaleNow))\r\n            //}\r\n            //\r\n            //\r\n            //if( tNow<(objParentHeight-objHeight+(objHeight-objHeight*scaleNow-(center.y-center.y*scaleNow))) ){\r\n            //    tNow=objParentHeight-objHeight+(objHeight-objHeight*scaleNow-(center.y-center.y*scaleNow))\r\n            //}\r\n\r\n\r\n\r\n            //\r\n            //if( lNow<(objParentWidth-objWidth) ){\r\n            //    lNow=objParentWidth-objWidth;\r\n            //}\r\n            //\r\n            //if( tNow<(objParentHeight-objHeight) ){\r\n            //    tNow=objParentHeight-objHeight;\r\n            //}\r\n\r\n\r\n\r\n            if( lNow<(objParentWidth-objWidth*scaleNow) ){\r\n                lNow=objParentWidth-objWidth*scaleNow;\r\n            }\r\n\r\n            if( tNow<(objParentHeight-objHeight*scaleNow) ){\r\n                tNow=objParentHeight-objHeight*scaleNow;\r\n            }\r\n\r\n\r\n            //if( lNow>-(center.x-center.x*scaleNow)){\r\n            //    lNow=-(center.x-center.x*scaleNow);\r\n            //}\r\n            //\r\n            //\r\n            //if( tNow>-(center.y-center.y*scaleNow)){\r\n            //    tNow=-(center.y-center.y*scaleNow);\r\n            //}\r\n\r\n\r\n            if( lNow>0){\r\n                lNow=0;\r\n            }\r\n\r\n            if( tNow>0){\r\n                tNow=0;\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            //console.log(lNow,tNow)\r\n\r\n            //\r\n            //$element.css({\r\n            //    transform: `translate3d(${lNow}px,${tNow}px,0)`,\r\n            //});\r\n            $element.css({\r\n                transform: `translate3d(${lNow}px,${tNow}px,0) scale3d(${position.scale},${position.scale},${position.scale})`,\r\n                transformOrigin: `0px 0px 0px`,\r\n            });\r\n\r\n            //console.log(lNow,tNow);\r\n            //position.left=lNow;\r\n            //position.top=tNow;\r\n            _this.settings.onPanMove({\r\n                left:lNow,\r\n                top:tNow,\r\n                scale:position.scale,\r\n            });\r\n        });\r\n\r\n        this.hammertime.on('panend', function(ev) {\r\n            position.left=lNow;\r\n            position.top=tNow;\r\n            //console.log('panpanend',lNow,tNow);\r\n            //console.log('pinch',ev);\r\n            _this.settings.onPanEnd(position);\r\n\r\n        });\r\n\r\n\r\n\r\n        this.hammertime.on('pinchstart', function(ev) {\r\n            lNow=position.left;\r\n            tNow=position.top;\r\n            console.log('ev pinchstart',ev);\r\n            console.log('ev.scale pinchstart',ev.scale);\r\n            elementParentRect =$elementParent.get()[0].getBoundingClientRect();\r\n            leftGap=objParentBorderLeftWidth+elementParentRect.left;\r\n            topGap=objParentBorderTopWidth+elementParentRect.top;\r\n            _this.settings.constant={\r\n                leftGap:leftGap,\r\n                topGap:topGap,\r\n            };\r\n\r\n\r\n\r\n            //center={\r\n            //    x:ev.center.x-leftGap-lNow,\r\n            //    y:ev.center.y-topGap-tNow,\r\n            //};\r\n            //console.log(center,lNow,tNow)\r\n            //$element.css({\r\n            //    transformOrigin: `${ev.center.x-leftGap-lNow}px ${ev.center.y-topGap-tNow}px 0`,\r\n            //});\r\n            scaleLast=0;\r\n        });\r\n\r\n\r\n        this.hammertime.on('pinchmove', function(ev) {\r\n            //console.log('pinch',ev);\r\n            //console.log('lNow,tNow',lNow,tNow);\r\n            //console.log('ev.scale pinchmove',ev.scale);\r\n\r\n            if(scaleLast){\r\n                var deltaScale=ev.scale-scaleLast;\r\n            }else{\r\n                var deltaScale=0;\r\n            }\r\n            //console.log('deltaScale',deltaScale);\r\n\r\n            scaleNow=position.scale+deltaScale;\r\n\r\n            if(scaleNow>_this.settings.maxScale){\r\n                scaleNow=_this.settings.maxScale;\r\n\r\n            }\r\n            if(scaleNow<_this.settings.minScale){\r\n                scaleNow=_this.settings.minScale;\r\n            }\r\n\r\n            if(scaleNow!=_this.settings.maxScale&&scaleNow!=_this.settings.minScale){\r\n\r\n                //center={\r\n                //    x:ev.center.x-leftGap,\r\n                //    y:ev.center.y-topGap,\r\n                //};\r\n\r\n\r\n                center={\r\n                    x:(ev.center.x-leftGap-lNow),\r\n                    y:(ev.center.y-topGap-tNow),\r\n                };\r\n\r\n\r\n\r\n\r\n\r\n                //\r\n                //lNow=-(center.x*scaleNow-center.x);\r\n                //tNow=-(center.y*scaleNow-center.y);\r\n\r\n\r\n                lNow=-(center.x*deltaScale/2)+lNow;\r\n                tNow=-(center.y*deltaScale/2)+tNow;\r\n\r\n\r\n                //console.log('lNow,tNow',lNow,tNow);\r\n                //console.log('scaleNow',scaleNow);\r\n                //console.log('centerx',center.x,'centery',center.y);\r\n\r\n                //\r\n                //console.log('scaleNow',scaleNow,lNow,tNow,ev.center.x,ev.center.y);\r\n                //console.log('gap',leftGap,topGap);\r\n                //console.log('elementParentRect',elementParentRect.top,elementParentRect.left)\r\n                //console.log('$elementParent.offset()',$elementParent.offset().top)\r\n\r\n                //console.log('position.left,position.top',position.left,position.top,position.scale);\r\n                //$element.css({\r\n                //\r\n                //    transform: `translate3d(${lNow}px,${tNow}px,0) scale3d(${scaleNow},${scaleNow},${scaleNow})`,\r\n                //    transformOrigin: `${ev.center.x-leftGap-lNow}px ${ev.center.y-topGap-tNow}px 0`,\r\n                //});\r\n\r\n                $element.css({\r\n                    transform: `translate3d(${lNow}px,${tNow}px,0) scale3d(${scaleNow},${scaleNow},${scaleNow})`,\r\n                    transformOrigin: `0px 0px 0px`,\r\n                });\r\n\r\n            }\r\n\r\n\r\n\r\n            position.scale=scaleNow;\r\n            scaleLast=ev.scale;\r\n\r\n            _this.settings.onPinchMove(position);\r\n            //console.log('pinch',scaleNow,'deltaScale',deltaScale);\r\n        });\r\n\r\n        this.hammertime.on('pinchcancel', function(ev) {\r\n            //alert('pinchcancel')\r\n        })\r\n\r\n\r\n\r\n        this.hammertime.on('pinchend', function(ev) {\r\n\r\n        //    //alert(scaleNow);\r\n            position.scale=scaleNow;\r\n            scaleLast=0;\r\n        //\r\n        //\r\n        //    var maxL=objParentWidth-objWidth*scaleNow;\r\n        //    var maxT=objParentHeight-objHeight*scaleNow;\r\n        //\r\n        //    if( lNow<maxL ){\r\n        //        lNow=maxL\r\n        //    }\r\n        //\r\n        //    if( tNow<maxT ){\r\n        //        tNow=maxT\r\n        //    }\r\n        //    var minL=0;\r\n        //    var minT=0;\r\n        //\r\n        //    if(lNow<minL){\r\n        //        lNow=minL;\r\n        //    }\r\n        //    if(tNow<minT){\r\n        //        tNow=minT;\r\n        //    }\r\n        //    $element.css({\r\n        //        transform: `translate3d(${lNow}px,${tNow}px,0) scale3d(${position.scale},${position.scale},${position.scale})`,\r\n        //        transformOrigin: `0px 0px 0px`,\r\n        //    });\r\n\r\n\r\n            if( lNow<(objParentWidth-objWidth*scaleNow) ){\r\n                lNow=objParentWidth-objWidth*scaleNow;\r\n            }\r\n\r\n            if( tNow<(objParentHeight-objHeight*scaleNow) ){\r\n                tNow=objParentHeight-objHeight*scaleNow;\r\n            }\r\n\r\n            if( lNow>0){\r\n                lNow=0;\r\n            }\r\n\r\n            if( tNow>0){\r\n                tNow=0;\r\n            }\r\n\r\n            $element.css({\r\n                transform: `translate3d(${lNow}px,${tNow}px,0) scale3d(${position.scale},${position.scale},${position.scale})`,\r\n                transformOrigin: `0px 0px 0px`,\r\n            });\r\n            position.left=lNow;\r\n            position.top=tNow;\r\n            _this.settings.onPinchEnd(position);\r\n        });\r\n\r\n    };\r\n\r\n    drag.prototype.move=function(x,y){\r\n        var _this=this;\r\n        var $element = this.$element;\r\n        var position=this.settings.position;\r\n        position.left=x;\r\n        position.top=y;\r\n        $element.css({\r\n            transform: `translate3d(${x}px,${y}px,0) scale3d(${position.scale},${position.scale},${position.scale})`,\r\n        });\r\n    };\r\n\r\n    drag.prototype.scale=function(scale){\r\n        var _this=this;\r\n        var $element = this.$element;\r\n        var position=this.settings.position;\r\n        var center=this.settings.center;\r\n        var leftGap=this.settings.constant.leftGap;\r\n        var topGap=this.settings.constant.topGap;\r\n\r\n        position.scale=scale;\r\n\r\n\r\n\r\n\r\n        $element.css({\r\n            transform: `translate3d(${position.left}px,${position.top}px,0) scale3d(${scale},${scale},${scale})`,\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    hb.drag=function(dom,options){\r\n        return new drag(dom,options);\r\n    };\r\n}());"]}