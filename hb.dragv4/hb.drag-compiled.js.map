{"version":3,"sources":["hb.drag.js"],"names":[],"mappings":"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","file":"hb.drag-compiled.js","sourcesContent":[";(function(){\n    \"use strict\";\n\n    function drag(dom,options){\n        var options=options||{};\n        var defaults={\n            maxScale:3,\n            minScale:0.5,\n            position:{\n                left:0,\n                top:0,\n                scale:1\n            },\n            onPinchMove:function(){\n                //console.log('f')\n            },\n            onPinchEnd:function(){\n                //console.log('f')\n            },\n            onPanMove:function(){\n                //console.log('f')\n            },\n            onPanEnd:function(){\n                //console.log('f')\n            },\n        };\n        this.settings = $.extend( {}, defaults, options );\n\n        if(typeof dom=='string'){\n            this.element=document.querySelector(dom);\n        }else{\n            this.element=dom;\n        }\n        this.$element=$(this.element);\n        this.init();\n        //console.log($el,el);\n    }\n\n\n    drag.prototype.init=function(){\n        var _this=this;\n        this.hammertime = new Hammer(this.element, {});\n        this.hammertime.get('pinch').set({ enable: true });\n        this.hammertime.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n\n        var element = this.element;\n        var $element = this.$element;\n        var $elementParent = this.$element.parent();\n\n        var objWidth = $element.outerWidth();\n        var objHeight = $element.outerHeight();\n        var objParentWidth = $elementParent.innerWidth();\n        var objParentHeight = $elementParent.innerHeight();\n        var objParentBorderLeftWidth = Number($elementParent.css(\"border-left-width\").replace(/px|rem|%|em/,''));\n        var objParentBorderTopWidth = Number($elementParent.css(\"border-top-width\").replace(/px|rem|%|em/,''));\n        var objParentBorderOffsetLeft = $elementParent.offset().left;\n        var objParentBorderOffsetTop = $elementParent.offset().top;\n\n        var elementParentRect =$elementParent.get()[0].getBoundingClientRect();\n\n\n        var leftGap=objParentBorderLeftWidth+elementParentRect.left;\n        var topGap=objParentBorderTopWidth+elementParentRect.top;\n\n\n\n        //console.log(leftGap,topGap);\n\n        if(objParentWidth/objWidth>objParentHeight/objHeight){\n            this.settings.minScale=objParentWidth/objWidth;\n        }else{\n            this.settings.minScale=objParentHeight/objHeight;\n        }\n\n\n        var position=this.settings.position;\n\n\n        var lNow=position.left;\n        var tNow=position.top;\n\n        var scaleNow=position.scale;\n        var scaleLast=0;\n        var center={\n            x:objWidth/2,\n            y:objHeight/2,\n        };\n        this.settings.center=center;\n\n\n        this.settings.constant={\n            leftGap:leftGap,\n            topGap:topGap,\n        };\n\n\n        $element.css({\n            transform: `translate3d(${lNow}px,${tNow}px,0)`,\n        });\n\n        //this.hammertime.on('swipe', function(ev) {\n        //    console.log('swipe',ev);\n        //});\n\n        this.hammertime.on('panmove', function(ev) {\n            //console.log('pan',ev);\n            //console.log('pan',lNow,tNow);\n\n            //console.log(ev.deltaX,ev.deltaY,ev.velocityX,ev.velocityY,ev.distance);\n\n            lNow=ev.deltaX+position.left;\n            tNow=ev.deltaY+position.top;\n\n\n\n            //lNow=(ev.deltaX+position.left)*scaleNow;\n            //tNow=(ev.deltaY+position.top)*scaleNow;\n\n\n            //if( lNow<(objParentWidth-objWidth+(objWidth-objWidth*scaleNow-(center.x-center.x*scaleNow))) ){\n            //    lNow=objParentWidth-objWidth+(objWidth-objWidth*scaleNow-(center.x-center.x*scaleNow))\n            //}\n            //\n            //\n            //if( tNow<(objParentHeight-objHeight+(objHeight-objHeight*scaleNow-(center.y-center.y*scaleNow))) ){\n            //    tNow=objParentHeight-objHeight+(objHeight-objHeight*scaleNow-(center.y-center.y*scaleNow))\n            //}\n\n\n\n            //\n            //if( lNow<(objParentWidth-objWidth) ){\n            //    lNow=objParentWidth-objWidth;\n            //}\n            //\n            //if( tNow<(objParentHeight-objHeight) ){\n            //    tNow=objParentHeight-objHeight;\n            //}\n\n\n\n            if( lNow<(objParentWidth-objWidth*scaleNow) ){\n                lNow=objParentWidth-objWidth*scaleNow;\n            }\n\n            if( tNow<(objParentHeight-objHeight*scaleNow) ){\n                tNow=objParentHeight-objHeight*scaleNow;\n            }\n\n\n            //if( lNow>-(center.x-center.x*scaleNow)){\n            //    lNow=-(center.x-center.x*scaleNow);\n            //}\n            //\n            //\n            //if( tNow>-(center.y-center.y*scaleNow)){\n            //    tNow=-(center.y-center.y*scaleNow);\n            //}\n\n\n            if( lNow>0){\n                lNow=0;\n            }\n\n            if( tNow>0){\n                tNow=0;\n            }\n\n\n\n\n\n            //console.log(lNow,tNow)\n\n            //\n            //$element.css({\n            //    transform: `translate3d(${lNow}px,${tNow}px,0)`,\n            //});\n            $element.css({\n                transform: `translate3d(${lNow}px,${tNow}px,0) scale3d(${position.scale},${position.scale},${position.scale})`,\n                transformOrigin: `0px 0px 0px`,\n            });\n\n            //console.log(lNow,tNow);\n            //position.left=lNow;\n            //position.top=tNow;\n            _this.settings.onPanMove({\n                left:lNow,\n                top:tNow,\n                scale:position.scale,\n            });\n        });\n\n        this.hammertime.on('panend', function(ev) {\n            position.left=lNow;\n            position.top=tNow;\n            //console.log('panpanend',lNow,tNow);\n            //console.log('pinch',ev);\n            _this.settings.onPanEnd(position);\n\n        });\n\n\n\n        this.hammertime.on('pinchstart', function(ev) {\n            lNow=position.left;\n            tNow=position.top;\n            //console.log('ev pinchstart',ev);\n            //console.log('ev.scale pinchstart',ev.scale);\n            elementParentRect =$elementParent.get()[0].getBoundingClientRect();\n            leftGap=objParentBorderLeftWidth+elementParentRect.left;\n            topGap=objParentBorderTopWidth+elementParentRect.top;\n            _this.settings.constant={\n                leftGap:leftGap,\n                topGap:topGap,\n            };\n\n\n\n            //center={\n            //    x:ev.center.x-leftGap-lNow,\n            //    y:ev.center.y-topGap-tNow,\n            //};\n            //console.log(center,lNow,tNow)\n            //$element.css({\n            //    transformOrigin: `${ev.center.x-leftGap-lNow}px ${ev.center.y-topGap-tNow}px 0`,\n            //});\n            scaleLast=0;\n        });\n\n\n        this.hammertime.on('pinchmove', function(ev) {\n            //console.log('pinch',ev);\n            //console.log('lNow,tNow',lNow,tNow);\n            //console.log('ev.scale pinchmove',ev.scale);\n\n            if(scaleLast){\n                var deltaScale=ev.scale-scaleLast;\n            }else{\n                var deltaScale=0;\n            }\n            //console.log('deltaScale',deltaScale);\n\n            scaleNow=position.scale+deltaScale;\n\n            if(scaleNow>_this.settings.maxScale){\n                scaleNow=_this.settings.maxScale;\n\n            }\n            if(scaleNow<_this.settings.minScale){\n                scaleNow=_this.settings.minScale;\n            }\n\n            if(scaleNow!=_this.settings.maxScale&&scaleNow!=_this.settings.minScale){\n\n\n                //center={\n                //    x:(ev.center.x-leftGap),\n                //    y:(ev.center.y-topGap),\n                //};\n                //\n                //var objCenter={\n                //    x:(center.x-lNow)/scaleNow,\n                //    y:(center.y-tNow)/scaleNow,\n                //}\n                //\n                //lNow=-(objCenter.x*deltaScale);\n                //tNow=-(objCenter.y*deltaScale);\n\n\n\n                center={\n                    x:((ev.center.x-leftGap)/scaleNow-lNow/scaleNow),\n                    y:((ev.center.y-topGap)/scaleNow-tNow/scaleNow),\n                };\n\n                lNow=-(center.x*deltaScale)+lNow;\n                tNow=-(center.y*deltaScale)+tNow;\n\n                //var cx=-(objParentWidth-objWidth*scaleNow)/2\n                //var cy=-(objParentHeight-objHeight*scaleNow)/2\n                ////\n                ////\n                //lNow=-cx\n                //tNow=-cy\n\n\n\n                //console.log('ev.center.x,leftGap,lNow',ev.center.x,leftGap,lNow);\n                //console.log('ev.center.y,topGap,tNow',ev.center.y,topGap,tNow);\n\n\n                //console.log('lNow,tNow',lNow,tNow);\n                //console.log('scaleNow',scaleNow);\n                //console.log('centerx',center.x,'centery',center.y);\n\n                //\n                //console.log('scaleNow',scaleNow,lNow,tNow,ev.center.x,ev.center.y);\n                //console.log('gap',leftGap,topGap);\n                //console.log('elementParentRect',elementParentRect.top,elementParentRect.left)\n                //console.log('$elementParent.offset()',$elementParent.offset().top)\n\n                //console.log('position.left,position.top',position.left,position.top,position.scale);\n                //$element.css({\n                //\n                //    transform: `translate3d(${lNow}px,${tNow}px,0) scale3d(${scaleNow},${scaleNow},${scaleNow})`,\n                //    transformOrigin: `${ev.center.x-leftGap-lNow}px ${ev.center.y-topGap-tNow}px 0`,\n                //});\n\n                $element.css({\n                    transform: `translate3d(${lNow}px,${tNow}px,0) scale3d(${scaleNow},${scaleNow},${scaleNow})`,\n                    transformOrigin: `0px 0px 0px`,\n                });\n\n            }\n\n\n\n            position.scale=scaleNow;\n            scaleLast=ev.scale;\n\n            _this.settings.onPinchMove(position);\n            //console.log('pinch',scaleNow,'deltaScale',deltaScale);\n        });\n\n        this.hammertime.on('pinchcancel', function(ev) {\n            //alert('pinchcancel')\n        })\n\n\n\n        this.hammertime.on('pinchend', function(ev) {\n\n        //    //alert(scaleNow);\n            position.scale=scaleNow;\n            scaleLast=0;\n        //\n        //\n        //    var maxL=objParentWidth-objWidth*scaleNow;\n        //    var maxT=objParentHeight-objHeight*scaleNow;\n        //\n        //    if( lNow<maxL ){\n        //        lNow=maxL\n        //    }\n        //\n        //    if( tNow<maxT ){\n        //        tNow=maxT\n        //    }\n        //    var minL=0;\n        //    var minT=0;\n        //\n        //    if(lNow<minL){\n        //        lNow=minL;\n        //    }\n        //    if(tNow<minT){\n        //        tNow=minT;\n        //    }\n        //    $element.css({\n        //        transform: `translate3d(${lNow}px,${tNow}px,0) scale3d(${position.scale},${position.scale},${position.scale})`,\n        //        transformOrigin: `0px 0px 0px`,\n        //    });\n\n\n            if( lNow<(objParentWidth-objWidth*scaleNow) ){\n                lNow=objParentWidth-objWidth*scaleNow;\n            }\n\n            if( tNow<(objParentHeight-objHeight*scaleNow) ){\n                tNow=objParentHeight-objHeight*scaleNow;\n            }\n\n            if( lNow>0){\n                lNow=0;\n            }\n\n            if( tNow>0){\n                tNow=0;\n            }\n\n            $element.css({\n                transform: `translate3d(${lNow}px,${tNow}px,0) scale3d(${position.scale},${position.scale},${position.scale})`,\n                transformOrigin: `0px 0px 0px`,\n            });\n            position.left=lNow;\n            position.top=tNow;\n            _this.settings.onPinchEnd(position);\n        });\n\n    };\n\n    drag.prototype.move=function(x,y){\n        var _this=this;\n        var $element = this.$element;\n        var position=this.settings.position;\n        position.left=x;\n        position.top=y;\n        $element.css({\n            transform: `translate3d(${x}px,${y}px,0) scale3d(${position.scale},${position.scale},${position.scale})`,\n        });\n    };\n\n    drag.prototype.scale=function(scale){\n        var _this=this;\n        var $element = this.$element;\n        var position=this.settings.position;\n        var center=this.settings.center;\n        var leftGap=this.settings.constant.leftGap;\n        var topGap=this.settings.constant.topGap;\n\n        position.scale=scale;\n\n\n\n\n        $element.css({\n            transform: `translate3d(${position.left}px,${position.top}px,0) scale3d(${scale},${scale},${scale})`,\n        });\n    };\n\n\n\n\n    hb.drag=function(dom,options){\n        return new drag(dom,options);\n    };\n}());"]}